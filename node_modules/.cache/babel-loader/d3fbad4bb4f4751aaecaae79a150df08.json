{"ast":null,"code":"var _jsxFileName = \"/Users/floweraviles/Desktop/Budget-App-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { apiURL } from \"./util/apiURL\";\nimport axios from 'axios';\nimport NavBar from './Components/NavBar';\nimport NewTransaction from './Components/NewTransaction';\nimport Edit from './Pages/Edit';\nimport TransactionDetails from './Components/TransactionDetails';\nimport Index from './Pages/Index'; // import Transactions from './Components/Transactions'; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = apiURL();\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n\n  const addTransaction = async newTransaction => {\n    let res;\n\n    try {\n      res = await axios.post(`${API}/transactions`, newTransaction);\n      setTransactions(prevTransactions => [...prevTransactions, res.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateTransaction = async (updatedTransactions, index) => {\n    try {\n      await axios.put(`${API}/transactions/${index}`, updatedTransactions);\n      const NewTransactions = [...transactions];\n      NewTransactions[index] = updatedTransactions;\n      setTransactions(NewTransactions);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteTransaction = async index => {\n    try {\n      await axios.delete(`${API}/transactions/${index}`);\n      const prevState = [...transactions];\n      prevState.splice(index, 1);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchTransactions = async () => {\n    let res;\n\n    try {\n      res = await axios.get(`${API}/transactions`);\n      setTransactions(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/transactions\",\n          children: /*#__PURE__*/_jsxDEV(Index, {\n            transactions: transactions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/transactions/new\",\n          children: /*#__PURE__*/_jsxDEV(NewTransaction, {\n            addTransaction: addTransaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/transactions/:index\",\n          children: /*#__PURE__*/_jsxDEV(TransactionDetails, {\n            deleteTransaction: deleteTransaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/transactions/:index/edit\",\n          children: /*#__PURE__*/_jsxDEV(Edit, {\n            updateTransaction: updateTransaction,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/floweraviles/Desktop/Budget-App-frontend/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","useState","useEffect","apiURL","axios","NavBar","NewTransaction","Edit","TransactionDetails","Index","API","App","transactions","setTransactions","addTransaction","newTransaction","res","post","prevTransactions","data","error","console","log","updateTransaction","updatedTransactions","index","put","NewTransactions","deleteTransaction","delete","prevState","splice","fetchTransactions","get"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {apiURL} from \"./util/apiURL\";\nimport axios from 'axios';\nimport NavBar from './Components/NavBar';\nimport NewTransaction from './Components/NewTransaction';\nimport Edit from './Pages/Edit';\nimport TransactionDetails from './Components/TransactionDetails';\nimport Index from './Pages/Index';\n\n// import Transactions from './Components/Transactions'; \n\nconst API = apiURL();\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n\n  const addTransaction = async (newTransaction) => {\n    let res;\n    try {\n      res = await axios.post(`${API}/transactions`, newTransaction);\n      setTransactions((prevTransactions) => [...prevTransactions, res.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateTransaction = async (updatedTransactions, index) => {\n    try {\n      await axios.put(`${API}/transactions/${index}`, updatedTransactions);\n      const NewTransactions = [...transactions];\n      NewTransactions[index] = updatedTransactions;\n      setTransactions(NewTransactions);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteTransaction = async (index) => {\n    try {\n      await axios.delete(`${API}/transactions/${index}`)\n      const prevState = [...transactions]\n      prevState.splice(index, 1)\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n  const fetchTransactions = async () => {\n    let res; \n    try {\n      res = await axios.get(`${API}/transactions`)\n      setTransactions(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path={\"/transactions\"}>\n            <Index transactions={transactions} />\n          </Route>\n          <Route exact path={\"/transactions/new\"}>\n            <NewTransaction addTransaction={addTransaction} />\n          </Route>\n          <Route exact path={\"/transactions/:index\"}>\n            <TransactionDetails deleteTransaction={deleteTransaction} />\n          </Route>\n          <Route exact path={\"/transactions/:index/edit\"}>\n            <Edit updateTransaction={updateTransaction}> </Edit>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}